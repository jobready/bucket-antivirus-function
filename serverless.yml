service: bucket-antivirus-function

provider:
  name: aws
  runtime: python3.7
  region: ap-southeast-2
  memorySize: 1024
  timeout: 300

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:GetObjectTagging"
        - "s3:PutObject"
        - "s3:PutObjectTagging"
        - "s3:PutObjectVersionTagging"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketClamavVirusDatabase" }, "/*" ] ]  }

    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        - { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketClamavVirusDatabase" }, "/*" ] ]  }
        - { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketClamavVirusDatabase" } ] ]  }

    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:GetObjectTagging"
        - "s3:GetObjectVersion"
        - "s3:PutObjectTagging"
        - "s3:PutObjectVersionTagging"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "kms:Decrypt"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - { "Fn::Join" : ["", ["arn:aws:sns:::", { "Ref" : "SNSTopicAntivirusScanStart" } ] ]  }
        - { "Fn::Join" : ["", ["arn:aws:sns:::", { "Ref" : "SNSTopicAntivirusScanStatus" } ] ]  }

  environment:
    AV_DEFINITION_S3_BUCKET: { Ref: "S3BucketClamavVirusDatabase" }
    CLAMAVLIB_PATH: "/opt/clamav"

plugins:
  - serverless-python-requirements
  - serverless-scriptable-plugin

functions:
  updateAntivirusDatabase:
    handler: update.lambda_handler
    environment:
      FRESHCLAM_PATH: "/opt/clamav/freshclam"
    events:
      - schedule: rate(3 hours)
    layers:
      - { Ref: ClamavLambdaLayer }

  scanFunction:
    handler: scan.lambda_handler
    environment:
      AV_SCAN_START_SNS_ARN: ${self:SNSTopicAntivirusScanStart}
      AV_STATUS_SNS_ARN: ${self:SNSTopicAntivirusScanStatus}
      CLAMSCAN_PATH: "/opt/clamav/clamscan"
    layers:
      - { Ref: ClamavLambdaLayer }

layers:
  clamav:
    package:
      artifact: ./layers/clamav.zip
    name: ${self:provider.stage}-clamav
    description: Clamav binaries

resources:
  Resources:
    S3BucketClamavVirusDatabase:
      Type: AWS::S3::Bucket

    SNSTopicAntivirusScanStart:
      Type: AWS::SNS::Topic

    SNSTopicAntivirusScanStatus:
      Type: AWS::SNS::Topic

custom:
  pythonRequirements:
    dockerizePip: non-linux
  scriptHooks:
    before:package:createDeploymentArtifacts:
      - docker build -t bucket-antivirus-function:latest .
      - mkdir -p ./layers
      - docker run -v $(pwd)/layers:/opt/mount/ --rm --entrypoint cp bucket-antivirus-function:latest /opt/app/clamav.zip /opt/mount/clamav.zip
